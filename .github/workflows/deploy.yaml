name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  cleanup-docker:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || github.event_name == 'pull_request'
    steps:
      - name: Clean up Docker
        run: docker system prune -a --volumes -f

  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        id: build-image
        run: |
          export TAG=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')-$(echo "${{ github.sha }}" | cut -c1-8)-$(date +%s)
          docker build --pull -t ${{ secrets.DOCKER_REPO }}:$TAG .
          docker push ${{ secrets.DOCKER_REPO }}:$TAG
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Save Image Tag
        run: echo "${{ env.TAG }}" > image.tag

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: image-tag
          path: image.tag

  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Check out deployment repo
        run: |
          git clone https://${{ secrets.GIT_REPO_TOKEN }}@gitlab.com/thichchocbia/defikitargocd.git
          cd defikitargocd
          echo "TAG=${{ steps.build-image.outputs.TAG }}" > deployment-tag.txt

      - name: Update Deployment Configuration
        run: |
          cd defikitargocd
          yq e -i ".image.tag = \"${{ env.TAG }}\"" ${{ env.ENV_CFG_VALUESFILE }}

      - name: Commit and Push Changes
        run: |
          cd defikitargocd
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.ENV_CFG_VALUESFILE }}
          git commit -m "Update image tag to ${{ env.TAG }}"
          git push origin main

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-image
    if: github.event_name == 'pull_request'
    env:
      ENV_CFG_VALUESFILE: prepump/stg/be/values.yaml
    steps:
      - name: Deploy Staging
        run: echo "Deploying to Staging"

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-image
    if: github.ref_name == 'main'
    env:
      ENV_CFG_VALUESFILE: prepump/prod/be/values.yaml
    steps:
      - name: Deploy Production
        run: echo "Deploying to Production"
